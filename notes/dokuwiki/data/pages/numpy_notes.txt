==== numpy arrays as cells of a dataframe ====

<code>
>>> import numpy as np
>>> import pandas as pd
>>> x = np.array([2,3,1,0]); y = np.array([1,2,0,4])
>>> df = pd.DataFrame({'a':[x,y], 'tradeid':['usd','eur']})

>>> df
              a tradeid
0  [2, 3, 1, 0]     usd
1  [1, 2, 0, 4]     eur

>>> df.set_index('tradeid')
                    a
tradeid
usd      [2, 3, 1, 0]
eur      [1, 2, 0, 4]
</code>

demonstrates | how to create a numpy array

tags | numpy array as element of a dataframe

==== dtype ====
<code>
 % ipython            
Python 3.8.5 (default, Sep  4 2020, 07:30:14)
IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: 
import numpy as np
a = np.array([1, 50, 100, 150, 200, 250, 300])
b = np.array([1, 50, 100, 150, 200, 250, 300], dtype=float)

In [2]: 
a
Out[2]: 
array([  1,  50, 100, 150, 200, 250, 300])

In [3]: 
b
Out[3]: 
array([  1.,  50., 100., 150., 200., 250., 300.])

In [4]: 
a.dtype
Out[4]: 
dtype('int64')

In [5]: 
b.dtype
Out[5]: 
dtype('float64')
</code>

==== SO links I came across ====
  * https://stackoverflow.com/questions/59105921/why-is-numpy-random-seed-not-remaining-fixed-but-randomstate-is-when-run-in-para - Why is numpy random seed not remaining fixed but RandomState is when run in parallel?\\ -> has sample code to reproduce the problem.
