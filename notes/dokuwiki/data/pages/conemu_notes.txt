===== favorite configuration =====

==== grouping windows for alt tab ====
tags | conemu alt tab, group tabs, club windows

If there are N conemu windows with M tabs in each (on average), the following setting will let you cycle through N icons instead of N*M icons.

<code>
Settings -> General -> Task bar -> Taskbar buttons -> Active console only (ConEmu window)
</code>

Sample use case 1:- I usually open a separate conemu window per "task" and multiple tabs within each window for a "subtask".

Sample use case 2:- Say we are working on two machines (ex:- dev and uat). We can open two conemu windows for each of them. On each machine we can have three tabs pointing to three different directories, for example source code, input, and output. With the default settings, clicking on the conemu icon in the taskbar or alt+tab will show 6 conemu icons. But with the above setting, we will only see 2 icons.

See also:- https://github.com/cmderdev/cmder/issues/758

==== git bash colors in conemu ====

Settings -> Features -> Colors -> Schemes -> <xterm> -> Save settings

==== run git bash terminal ====

step 1: git bash set up

<code>
task name = Bash::Git bash
Default task for new console = check
Taskbar jump lists = check
Default shell (Win+x) = check
Task parameters: leave empty
commands: 
"%ProgramFiles%\Git\git-cmd.exe" --no-cd --command=usr/bin/bash.exe -l -i
</code>

step 1 (old, deleteafter): Add a task
<code>
Right click on the window title bar -> Settings -> Startup -> Tasks
click the '+' button
Set the title to Git
Default task for new console -> check
Task parameters = /DIR "C:\Users\kkusuman"
Commands - "C:\Program Files\Git\Git Gui\bin\bash.exe" --login -i
Move the {Git} task to the top by repeatedly clicking on the "Up" button
Save settings
</code>

In the above, change the title, start directory, bash path accordingly.

step 2: [[#git_bash_colors_in_conemu| Set up "git bash" like colors]]

step 3: Auto restore previous session

<code>
In the Settings window ->
Startup -> Auto save/restore opened tabs -> select -> Save settings
</code>

step 4: unbind ctrl-v

By default ctrl-v is bound to "Paste first line of clipboard contents, autoconvert paths for cygwin's appllications (ignored in Far)". This messes up with vim which uses ctrl-v to enter into visual mode.

<code>
Settings -> Keys & Macro -> unbind Ctrl-v
</code>

==== start git bash on start up ====

<code>
Settings -> Startup -> Specified named task -> {Bash::Git bash} -> Save settings
</code>

==== auto restore current working directory ====

Add the following lines to ~/.bashrc

<code>
if [[ -n "${ConEmuPID}" ]]; then
  PROMPT_COMMAND='ConEmuC -StoreCWD'
fi
</code>

Tested with: conemu build 151101, git bash 2.18.0, Windows 7.

Solution is specific to | conemu + git bash + win 7 . For other configurations, see https://conemu.github.io/en/ShellWorkDir.html

See also :-

  * https://github.com/Maximus5/ConEmu/issues/784

tags | auto save, restore, preserve current working directory after restarting a conemu session

==== font size ====

<code>
Settings -> Main ->
font = Consolas
size = 11
</code>

This gives the same font size as that of default git bash.

==== disable warning when pasting multiple lines ====
Copy pasting multiple lines in vim gives the following warning
<code>
Warning!

Pasting multi-line text involves
sending <Enter> keypresses to console!

Continue?
</code>
Disable it by doing
<code>
Settings -> Keys & Macro -> Paste ->
-> Confirm critical actions
-> Multi-line paste: avoid unexpected command execution by <Enter> keypress
-> uncheck
</code>

==== copy paste multiple lines ====
<code>
Settings -> Keys & Macro -> Paste ->
-> Pasting text behaviour (with exception of Far Manager)
-> Paste mode #2 (Shift+Insert)
-> Multi lines
</code>

solves | New lines lost when pasting into ipython

Ref:- https://github.com/Maximus5/ConEmu/issues/1809

==== check for new stable version on startup ====
<code>
Settings -> General -> Update
-> Update settings
-> Do automatic check on
  -> check Startup box
  -> uncheck Hourly box
-> Preferred release type
  -> select Stable radio button
</code>
===== dummy =====
==== attach and detach terminals ====

To detach a 'git bash' session
<code>
Right click on the tab -> Close or kill -> choose either Unfasten or Detach
</code>

Unfasten will detach the 'git bash' session to a new, separate ConEmu window. Detach will just detach the 'git bash' session from the conemu. The window will no longer managed by a ConEmu window.

To fasten an unfastened session, first detach it

<code>
Right click on the tab -> Close or kill -> Detach
</code>

and then attach it back

<code>
Go to the original conemu session (the one where the terminal was unfastened from) ->
right click -> Attach to -> select the appropriate entry
</code>

==== useful keyboard shortcuts ====
  * move to next tab - win+shift+q, previous tab - win+q
  * new console tab - win+x
  * rename tab - apps+r
  * move tab to right - win+alt+right, to left - win+alt+keft
  * move between tabs - ctrl+tab

==== block selection in vim ====
Use ctrl+shift+v instead of the usual ctrl+v to select a block of text.
==== tasks ====
tags | conemu star an ssh session, specify startup directory for ssh

To start a git bash terminal
<code>
> -cur_console:d:C:\Users\raju "%ProgramFiles%\Git\git-cmd.exe" --no-cd --command=usr/bin/bash.exe -l -i
</code>

To start two git bash terminals in two directories
<code>
> -cur_console:d:C:\Users\raju\dir1 "%ProgramFiles%\Git\git-cmd.exe" --no-cd --command=usr/bin/bash.exe -l -i

-cur_console:d:C:\Users\raju\dir2 "%ProgramFiles%\Git\git-cmd.exe" --no-cd --command=usr/bin/bash.exe -l -i
</code>

To start an ssh session
<code>
> -cur_console:d:C:\Users\raju "%ProgramFiles%\Git\git-cmd.exe" --no-cd --command=usr/bin/ssh.exe username@server
</code>

To start an ssh session and go to a directory
<code>
> -cur_console:d:C:\Users\raju "%ProgramFiles%\Git\git-cmd.exe" --no-cd --command=usr/bin/ssh.exe -t username@server "cd ~/dir1 && bash"
</code>

To name the tabs, add something like ''-cur_console:n:t:blah'', ''-cur_console:n:t:"blah blah"''. For example
<code>
> -cur_console:d:C:\Users\raju "%ProgramFiles%\Git\git-cmd.exe" --no-cd --command=usr/bin/ssh.exe -t username@server "cd ~/dir1 && bash" -cur_console:n:t:"Tab name"
</code>

See also:- https://github.com/tovletoglou/comenu-pane-templates -> search for "Task examples"

==== run task from command line ====
<code>
/C/Program\ Files\ \(x86\)/GitHub/ConEmuPack/ConEmu.exe -run {taskname}
</code>

Ref:- https://conemu.github.io/en/ConEmuArgs.html

==== launch conemu windows ====
<code>
$ cat launch_windows.bat
REM Sample script to launch different conemu task windows.
REM You can either double click this file in file explorer or create a shortcut
REM to it on desktop and double click there.

REM start /B is like Linux's & (which backgrounds the jobs).
REM If you do not use it, then {task2} will be started only after all the
REM windows from {task1} are exited.
start /B cmd.exe /c ""C:\Program Files (x86)\GitHub\ConEmuPack\ConEmu.exe" -run {task1}"
start /B cmd.exe /c ""C:\Program Files (x86)\GitHub\ConEmuPack\ConEmu.exe" -run {task2}"
start /B cmd.exe /c ""C:\Program Files (x86)\GitHub\ConEmuPack\ConEmu.exe" -run {task3}"

cd /D "%~dp0"
start /B cmd.exe /c ""C:\Program Files (x86)\GitHub\ConEmuPack\ConEmu.exe" -Title notes -run @%cd%\task_notes.txt"

REM The launching shell remains open and has to be manually closed. Afterwards,
REM see if there is a way to close it automatically.
</code>

where task1, task2, task3 are the conemu tasks specified on the “Tasks” page of “Settings” dialog.

The task_notes.txt is a taskfile stored in the same directory as that of the batch script. It contains a list of tabs to be launched in a conemu window.
<code>
$ cat task_notes.txt
> -cur_console:d:C:\Users\raju\ideas "%ProgramFiles%\Git\git-cmd.exe" --no-cd --command=usr/bin/bash.exe -l -i -cur_console:n:t:"ideas"
> -cur_console:d:C:\Users\raju\thoughts "%ProgramFiles%\Git\git-cmd.exe" --no-cd --command=usr/bin/bash.exe -l -i -cur_console:n:t:"thoughts"
</code>

Ref:- https://conemu.github.io/en/ConEmuArgs.html - explains about the -run argument.

==== useful links ====
  * https://conemu.github.io/en/KeyboardShortcuts.html
  * https://github.com/Maximus5/ConEmu/releases - release history
    * Useful for "how many conemu releases were there between 210422 and 210627?"

==== disable new preview version available popup ====
<code>
Settings -> General -> Update
-> Update settings
-> Do automatic check on
-> uncheck Startup and Hourly boxes
</code>
