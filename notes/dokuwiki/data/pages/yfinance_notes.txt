==== convert daily ohlcv data to monthly ====
code snippet:
<code>
def daily_ohlcv_to_month_end_ohlcv(daily):
    monthly = daily.resample("ME").agg(
        {
            "Open": "first",
            "High": "max",
            "Low": "min",
            "Close": "last",
            "Adj Close": "last",
            "Volume": "sum",
        }
    )
    return monthly
</code>

used it in https://github.com/KamarajuKusumanchi/market_data_processor/blob/master/tests/src/utils/test_yfinance_utils.py -> test_daily_ohlc_to_month_end_ohlc()

See also:
  * https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.resample.html - documentation on pandas.DataFrame.resample
  * http://pandas.pydata.org/pandas-docs/stable/timeseries.html
    * https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases - Offset aliases
    * https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#anchored-offsets - Anchored offsets
    * https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#resampling - Resampling
    * https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects - DateOffset objects
      * tags | "Frequency String"
  * https://stackoverflow.com/questions/17001389/pandas-resample-documentation
  * ISO8601 has a way to represent durations - https://en.wikipedia.org/wiki/ISO_8601#Durations
  * https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.tseries.offsets.MonthEnd.html
    * used it in https://github.com/KamarajuKusumanchi/market_data_processor/blob/master/tests/src/utils/test_yfinance_utils.py -> test_daily_ohlc_to_month_end_ohlc()


==== links I came across ====
  * repo of yfinance - https://github.com/ranaroussi/yfinance
  * https://github.com/ranaroussi/yfinance/discussions/1084 - tells how to contribute to yfinance code repo.


==== alternatives ====
  * yahooquery
  * yahoofinancials - the biggest difference from yfinance is that all the downloaded data is returned as JSON
  * yahoo_earnings_calendar - a small library to download the earnings calendar.

==== Search attribute ====
:?: From which version onwards is the Search attribute available in yfinance?

:!: From 0.2.51.

Consider the following environment files

<code>
 % stuff.py env_test_yfinance_0.2.50.yml 
name: test_yfinance_0.2.50
channels:
  - defaults
dependencies:
  - python=3.13
  - conda-forge::yfinance=0.2.50
</code>

<code>
 % stuff.py env_test_yfinance_0.2.51.yml
name: test_yfinance_0.2.51
channels:
  - defaults
dependencies:
  - python=3.13
  - conda-forge::yfinance=0.2.51
</code>

where stuff.py is a python script that prints a file after removing comments and empty lines. It can by downloaded from https://github.com/KamarajuKusumanchi/rutils/blob/master/python3/stuff.py .

Create the environments
<code>
 % conda env create -f env_test_yfinance_0.2.50.yml
 % conda env create -f env_test_yfinance_0.2.51.yml
</code>

Conside the script
<code>
 % stuff.py search_attribute.py 
import yfinance as yf
if __name__ == "__main__":
    news = yf.Search("declares special dividend", news_count=10).news
    print('news fetched successfully.')
</code>
Make it executable
<code>
 % chmod +x search_attribute.py
</code>

The script throws an error with yfinance 0.2.50
<code>
 % conda activate test_yfinance_0.2.50

 % ./search_attribute.py 
Traceback (most recent call last):
  File "/home/rajulocal/x/./search_attribute.py", line 6, in <module>
    news = yf.Search("declares special dividend", news_count=10).news
           ^^^^^^^^^
AttributeError: module 'yfinance' has no attribute 'Search'
</code>

But works fine with yfinance 0.2.51
<code>
 % conda activate test_yfinance_0.2.51
 % ./search_attribute.py              
news fetched successfully.
</code>

Related links:
  * https://ranaroussi.github.io/yfinance/reference/api/yfinance.Search.html
  * https://github.com/ranaroussi/yfinance/releases/tag/0.2.51 - shows that yf.Search was added in 0.2.51
  * https://github.com/ranaroussi/yfinance/pull/2160 - relevant merge request for this feature
    * shows how to run the relevant unit tests ''python -m unittest tests.test_search''
  * https://github.com/KamarajuKusumanchi/market_data_processor/blob/master/src/utils/special_dividends.py - Uses yf.Search() to get the special dividend announcements.

==== Failed to retrieve the news and received faulty response instead ====
If you are getting this error, try using yfinance >= 0.2.54.

For example, I was getting this error with yfinance 0.2.51
<code>
 % conda activate test_yfinance_0.2.51

 % python                             
Python 3.13.1 | packaged by conda-forge | (main, Dec  5 2024, 21:23:54) [GCC 13.3.0] on linux

>>> import yfinance as yf
>>> yf.__version__
'0.2.51'
>>> news = yf.Search("declares special dividend", news_count=10).news
declares special dividend: Failed to retrieve the news and received faulty response instead.
>>> len(news)
0
</code>

but not with 0.2.54
<code>
 % conda activate test_yfinance_0.2.54

 % python                             
Python 3.13.2 | packaged by conda-forge | (main, Feb 17 2025, 14:10:22) [GCC 13.3.0] on linux

>>> import yfinance as yf
>>> yf.__version__
'0.2.54'
>>> news = yf.Search("declares special dividend", news_count=10).news
>>> len(news)
10
</code>
