===== Current configuration =====

==== my favorite configuration ====
if version == 2019.3.3:
  * File -> Settings -> Appearance & Behavior -> Appearance -> Theme -> IntelliJ
else:
  * File -> Settings -> Appearance & Behavior -> Appearance -> UI Options -> Theme -> IntelliJ
  * File -> Settings -> Appearance & Behavior -> System Settings -> Project Opening -> select "Open project in new window"
  * scrollbar -> right click -> Customize Highlighting Level -> drag it to Syntax
  * File -> Settings -> Editor -> General -> Editor Tabs -> Tab Closing Policy -> Tab limit - 20 -> OK

==== show menu bar ====
Hamburger Button -> View -> Appearance -> Main Menu -> Show above Main Toolbar

tested in | pycharm 2025.1.2

===== useful shortcuts =====

==== go to the location of current file in the project tool window ====

Alt+F1 -> 1

Ref:- https://intellij-support.jetbrains.com/hc/en-us/community/posts/206737795-Show-current-file-in-Project-view-

==== view just the functions ====

Ctrl+F12

Ref:- https://www.jetbrains.com/help/pycharm/viewing-structure-of-a-source-file.html

tags | show code outline

==== To go back after control clicking ====

  * Ctrl+Alt+Left arrow, Ctrl+Alt+Right arrow - to go back and forward
  * Ctrl+Tab - Switch to the last (most recent) tab -- similar to how Alt+Tab works

Ref:- https://stackoverflow.com/questions/25103626/in-pycharm-how-to-go-back-to-last-location

tags | coming back after navigating to a function

==== Jump to next/previous function ====

  * Alt+Down, Alt+Up
  * https://www.jetbrains.com/help/pycharm/navigating-between-methods-and-tags.html

==== Navigating between editor tabs ====

  * Open a file already opened in another tab - Ctrl+Tab
  * Go to the right or to the left tab - Alt+Right or Alt+Left
  * Go back and forth through the history of visited tabs - Ctrl+Alt+Left, Ctrl+Alt+Right

==== view function definition ====

  * Ctrl+Shift+I
  * Ctrl+left click
  * https://www.jetbrains.com/help/pycharm/viewing-definition.html

==== folding ====

  * Ctrl+NumPad Plus - Expand the current fold
  * Ctrl+NumPad - - Close the current fold
  * Ctrl+Shift+Plus - open closed folds

Ref: https://www.jetbrains.com/help/pycharm/code-folding.html

tags | expand import stanza by keyboard

==== editing ====

  * duplicate current line - Ctrl+d . Documented in https://www.jetbrains.com/help/pycharm/adding-deleting-and-moving-code-elements.html#d1293e39

==== switch between open projects ====

  * Window | Next Project Window Ctrl+Alt+]
  * Window | Previous Project Window Ctrl+Alt+[
  * Window | <html><ProjectNameOrLocation></html>

==== project tool window ====

  * alt+1
  * https://www.jetbrains.com/help/pycharm/project-tool-window.html

==== formatting ====

  * format the whole file - ctrl+alt+L
  * format a selection - ctrl+alt+l

Ref:- https://www.jetbrains.com/help/pycharm/reformat-and-rearrange-code.html

tags | realign selected code

==== change indentation ====

  * https://www.jetbrains.com/help/pycharm/changing-indentation.html - indent or deindent a block
  * indent/deindent selected code - tab/shift+tab

==== multiple selections ====

To select multiple blocks of text

<code>
select first block normally
press ALT key for all the subsequent blocks.
</code>

==== detach a tab ====
Shift + F4

===== dummy =====
==== run git bash in the terminal ====

  * File -> Settings -> Tools -> Terminal -> Shell path = "C:\Program Files\Git\bin\bash.exe" %%--%%login

The quotes are important

Ref:- https://stackoverflow.com/questions/20573213/embed-git-bash-in-pycharm-as-external-tool-and-work-with-it-in-pycharm-window-w

==== configure pycharm with pytest ====
<code>
File -> Settings -> Tools -> Python Integrated Tools -> Testing -> Default test runner -> select pytest from the dropdown -> OK
</code>

Tested with pycharm 2022.1

Ref: https://stackoverflow.com/questions/6397063/how-do-i-configure-pycharm-to-run-py-test-tests

==== mark import as used ====
On the unused import line press Alt+Enter -> "Optimize imports" -> Disable inspection

Ref:- https://intellij-support.jetbrains.com/hc/en-us/community/posts/206592765-Marking-an-import-to-prevent-deleting-it-with-optimize-imports-

To revert back to the normal behaviour

Ctrl+Alt+s -> Inspections -> search for "unresolved references" -> select the one in Python -> check

Ref:- https://intellij-support.jetbrains.com/hc/en-us/community/posts/206585365-Unused-imports-not-highlighted

==== copy function name with the class name ====
  * ctrl+alt+shift+c

==== Skip breakpoints ====
  * https://www.jetbrains.com/help/pycharm/stepping-through-the-program.html#force-run-to-cursor
    * Ctrl+Alt+F9 - run to cursor and skip all the break points in between
  * https://www.jetbrains.com/help/pycharm/stepping-through-the-program.html#force-step-over
    * Alt+Shift+F8 - step over the current line of code and ignore all the break points in between

  * https://www.jetbrains.com/help/pycharm/stepping-through-the-program.html#run-to-cursor
    * Alt+F9 - run to cursor
  * https://www.jetbrains.com/help/pycharm/stepping-through-the-program.html#step-over
    * F8 - step over

==== useful command line shortcuts ====
  * Ctrl+E - recent files

==== release history ====
<code>
released, version
2025-08-04, 2025.2
2023-03-29, 2023.1
2023-03-09, 2022.3.3
2023-03-15, 2022.2.5
2022-08-16, 2022.2.1
2022-04-12, 2022.1
2021-07-27, 2021.2
2021-04-06, 2021.1
2020-12-01, 2020.3
2020-07-28, 2020.2
2020-04-07, 2020.1
2019-10-31, 2019.2.4
2019-09-25, 2019.2.3
2019-07-30, 2019.1.4
2019-05-29, 2019.1.3
2019-05-07, 2019.1.2
2019-02-26, 2018.3.5
2019-01-29, 2018.3.4
2018-09-19, 2018.2.4
2018-04-09, 2018.1.1
2017-09-05, 2017.2.3
2017-08-23, 2017.2.2
2017-07-11, 2017.1.5
</code>

Note:- the above table is not comprehensive. I am just updating it sporadically.

Ref:-
  * https://www.jetbrains.com/pycharm/download/#section=linux - latest version
  * https://www.jetbrains.com/pycharm/download/previous.html - previous releases

==== useful links ====
  * Editor basics - https://www.jetbrains.com/help/pycharm/using-code-editor.html
    * -> Came to know about Ctrl-Shift-F12 shortcut from here

  * https://www.jetbrains.com/help/pycharm/basic-tutorials.html
    * -> https://www.jetbrains.com/help/pycharm/creating-and-running-your-first-python-project.html - for beginners; useful if you have not read it before.
    * -> https://www.jetbrains.com/help/pycharm/debugging-your-first-python-application.html - for beginners; useful if you have not read it before.
    * -> https://www.jetbrains.com/help/pycharm/testing-your-first-python-application.html - for beginners; useful if you have not read it before.
  * Where are run debug configurations stored?\\ See:
    * https://www.jetbrains.com/help/pycharm/run-debug-configuration.html

  * pycharm tutorial - https://www.jetbrains.com/help/pycharm/quick-start-guide.html
  * checkout code from subversion repository - https://www.jetbrains.com/help/pycharm/checking-out-files-from-subversion-repository.html
  * add directory to the module path - https://stackoverflow.com/questions/28326362/pycharm-and-pythonpath
  * Feature-by-feature comparison between community and professional versions - https://www.jetbrains.com/pycharm/features/editions_comparison_matrix.html
  * https://www.jetbrains.com/help/pycharm/menus-and-toolbars.html - contains a picture showing the menus and toolbars
  * homepage - https://www.jetbrains.com/pycharm/

  * documentaion in pdf - https://www.jetbrains.com/help/pycharm/2017.1/pycharm-2017.1-help.pdf . Does a similar thing exist for 2017.2?
  * Joining Lines and Literals - https://www.jetbrains.com/help/pycharm/joining-lines-and-literals.html
==== links to the documentation ====
  * Change project name - https://www.jetbrains.com/help/pycharm/renaming-projects.html
  * Exclude some directories from pycharm project - https://www.jetbrains.com/help/pycharm/excluding-files-from-projects.html
  * Find Tool Window - https://www.jetbrains.com/help/pycharm/find-tool-window.html
  * Where is a variable declared - https://www.jetbrains.com/help/idea/navigating-to-declaration-or-type-declaration-of-a-symbol.html
  * Always open a new project in a new window - https://www.jetbrains.com/help/pycharm/opening-reopening-and-closing-projects.html
  * check the log commits betwen two branches - https://www.jetbrains.com/help/pycharm/manage-branches.html#compare_branches \\ tags | git log branchA..branchB

==== show the git branch ====
enable the "Git Branch" status bar widget.

approach 1:
  * View -> Appearance -> Status Bar Widgets -> Git Branch -> check.

approach 2:
  * Ctrl + Shift + a -> type "show git branch" -> select Show 'Git Branch' Widget -> ON

tested using pycharm 2025.1.2
