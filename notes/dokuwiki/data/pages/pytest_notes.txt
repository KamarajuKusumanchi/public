==== test a script that prints to stdout ====
tags | python test case for print

snippet 1:
<code>
def test_foo(capsys):
    ...
    captured = capsys.readouterr()
    ...
    assert captured.out == expected_output
</code>

snippet 2:
<code>
out, error = capsys.readouterr()
</code>

Ref:-
  * See https://docs.pytest.org/en/stable/capture.html#accessing-captured-output-from-a-test-function for help on how capsys works in pytest.
  * https://stackoverflow.com/a/56300627/6305733 - contains a simple example; shows how to use capsys with pytest as well as with unittest; I first came across capsys here.
  * my usages:
    * https://github.com/KamarajuKusumanchi/rutils/blob/master/python3/tests/lib/test_DataFrameUtils.py - tests dataframe printed to stdout
    * https://github.com/KamarajuKusumanchi/rutils/blob/master/python3/tests/test_get_column_names.py - I used capsys for the first time here

==== run pytest on the current file from the current file ====
  * https://stackoverflow.com/questions/35353771/invoke-pytest-from-python-for-current-module-only - gives the solution
  * https://docs.pytest.org/en/stable/usage.html#calling-pytest-from-python-code

tags | run pytest from main function, pytest run parameterized test
