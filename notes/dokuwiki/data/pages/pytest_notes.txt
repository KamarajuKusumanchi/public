==== test a function that writes output to a file ====

<code>
$ cat write_file.py
def write_to_file(fname):
    with open(fname, 'w') as FileObj:
        FileObj.write('Hello\n')

def test_write_to_file(tmpdir):
    file = tmpdir.join('output.txt')
    write_to_file(file)
    contents_got = file.read()
    contents_expected = 'Hello\n'
    assert contents_got == contents_expected
</code>

<code>
$ python -m pytest write_file.py
</code>
Ref:
  * https://docs.pytest.org/en/7.1.x/how-to/tmp_path.html
  * https://docs.pytest.org/en/6.2.x/tmpdir.html
  * https://stackoverflow.com/questions/20531072/writing-a-pytest-function-to-check-outputting-to-a-file-in-python


==== test a script that prints to stdout ====
tags | python test case for print

snippet 1:
<code>
def test_foo(capsys):
    ...
    captured = capsys.readouterr()
    ...
    assert captured.out == expected_output
</code>

snippet 2:
<code>
out, error = capsys.readouterr()
</code>

Ref:-
  * See https://docs.pytest.org/en/stable/capture.html#accessing-captured-output-from-a-test-function for help on how capsys works in pytest.
  * https://stackoverflow.com/a/56300627/6305733 - contains a simple example; shows how to use capsys with pytest as well as with unittest; I first came across capsys here.
  * my usages:
    * https://github.com/KamarajuKusumanchi/rutils/blob/master/python3/tests/lib/test_DataFrameUtils.py - tests dataframe printed to stdout
    * https://github.com/KamarajuKusumanchi/rutils/blob/master/python3/tests/test_get_column_names.py - I used capsys for the first time here

==== run pytest on the current file from the current file ====
  * https://stackoverflow.com/questions/35353771/invoke-pytest-from-python-for-current-module-only - gives the solution
  * https://docs.pytest.org/en/stable/usage.html#calling-pytest-from-python-code

tags | run pytest from main function, pytest run parameterized test
