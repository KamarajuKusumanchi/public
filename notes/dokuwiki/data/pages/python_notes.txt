===== dummy =====
==== tasks ====
  * [[get urls in a url]]

==== where is a module imported from ====
tags | module path

one way:
<code>
import importlib
importlib.util.find_spec("foo")
</code>

Alternative:
<code>
import imp
imp.find_module("foo")
</code>

Note:
  * The imp module is deprecated in favour of importlib. So use the first approach whenever possible.

==== get the function name ====
<code>
my_function.__name__
</code>
Ref:- https://stackoverflow.com/questions/251464/how-to-get-a-function-name-as-a-string

==== empty file ====
Task: If input file is empty, write an empty output file
<code>
import os
if os.stat(input_file).st_size == 0:
    logger.info('Input file is empty.')
    logger.info('Writing an empty output file.')
    with open(output_file, 'w') as fp:
        pass
</code>

==== config files ====
  * https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.defaults - start from here to see the list of functions available
  * use extension .cfg for config files.
    * based on: https://docs.python.org/3/library/configparser.html -> search for .cfg
    * another choice is .ini . But I prefer .cfg over .ini
    * more info on INI: https://en.wikipedia.org/wiki/INI_file

==== python mailing list ====
  * archives -https://mail.python.org/pipermail/python-list/
  * list info - https://mail.python.org/mailman/listinfo/python-list
==== python reference ====
  * operator precedence - https://docs.python.org/3/reference/expressions.html#operator-precedence

==== python tutorials ====
  * Classes - https://docs.python.org/3/tutorial/classes.html
  * https://docs.python.org/3/tutorial/index.html

==== python release cycle ====
  * https://python-release-cycle.glitch.me/ - useful to check when a Python version was released and when it would be EOL.

==== useful links ====
  * [[https://nedbatchelder.com/text/names.html | Facts and myths about Python names and values]] (nedbatchelder.com) - well explained.

===== stack overflow links I came across =====
==== memory consumed by a function ====
  * https://stackoverflow.com/a/49271549
    * refers to | http://web.archive.org/web/20180416235121/http://ihorbobak.com/index.php/2018/02/22/python-process-memory-profiling/

==== dummy ====
  * https://superuser.com/questions/1633073/why-are-tar-xz-files-15x-smaller-when-using-pythons-tar-library-compared-to-mac - Why are tar.xz files 15x smaller when using Python's tar library compared to macOS tar?
